@model IEnumerable<HotelIntegratedComputerSystems.Models.HouseKeepingViewModel>

@{
    ViewBag.Title = "Index";
}


<h2>HouseKeeping</h2>

<head>
    
    <script src = "https://code.jquery.com/jquery-1.12.3.js"></script>
    <script src = "https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script src = "https://cdn.datatables.net/1.10.12/js/dataTables.bootstrap.min.js"></script>

    <script>

        $(document).ready(function () {
            $('#table').DataTable();
        });

    </script>

</head>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Rooms</h3>
        
    </div>

    <div class="panel-body">
        <input type="text" id="myInput" onkeyup="filterFunction()" class="form-control" data-action="filter" placeholder="Filter Rooms" />
    </div>

    <table class="table table-hover" id="dev-table">
        <tbody>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.BuildingName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FloorNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RoomNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RoomBedding)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HousekeepingCleanStatus)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.RoomStatusDescription)
                </th>
                <th>
                    Change Status
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.BuildingName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FloorNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RoomNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RoomBedding)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HousekeepingCleanStatus)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.RoomStatusDescription)
                    </td>
                    <td>
                        @Html.ActionLink("Clean", "Clean", new { id = item.Id }) |
                        @Html.ActionLink("Dirty", "Dirty", new { id = item.Id }) |
                        @Html.ActionLink("DND", "Dnd", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>  

    <script>
        function filterFunction() {
            var input = document.getElementById("myInput");
            var filter = input.value.toUpperCase();
            var splitFilter = filter.split(" ")
            var cleanedSplitFilter = splitFilter.filter(Boolean);
            
			var table = document.getElementById("dev-table");
			var tr = table.getElementsByTagName("tr");

			for (var i = 0; i < tr.length; i++) {
			    tr[i].style.display = "";
                var building = tr[i].getElementsByTagName("td")[0];
                var floor = tr[i].getElementsByTagName("td")[1];
                var room = tr[i].getElementsByTagName("td")[2];
                var bedding = tr[i].getElementsByTagName("td")[3]
                var cleanStatus = tr[i].getElementsByTagName("td")[4];
                var roomStatus = tr[i].getElementsByTagName("td")[5];
                if (filter != "") {
                    for (var j = 0; j < cleanedSplitFilter.length; j++) {
                        if (building || floor || room || bedding || cleanStatus || roomStatus) {
                            if ((CheckForMatch(cleanStatus, building, floor, room, bedding, roomStatus, cleanedSplitFilter[j]))
                                && (tr[i].style.display == "")) {
                                    tr[i].style.display = "";
                                }
                            else if ((CheckForMatch(cleanStatus, building, floor, room, bedding, roomStatus, cleanedSplitFilter[j]))
                                && (tr[i].style.display == "none")) {
                                }
                                else {
                                    tr[i].style.display = "none";
                                }
                            }
                        }
                    }
                    else {
                        tr[i].style.display = "";
                    }

                
            }
        }


        function CheckForMatch(cleanStatus, building, floor, room, bedding, roomStatus, filter)
        {
            return building.innerHTML.toUpperCase().indexOf(filter) > -1
                        || floor.innerHTML.toUpperCase().indexOf(filter) > -1
                        || room.innerHTML.toUpperCase().indexOf(filter) > -1
                        || bedding.innerHTML.toUpperCase().indexOf(filter) > -1
                        || cleanStatus.innerHTML.toUpperCase().indexOf(filter) > -1
                        || roomStatus.innerHTML.toUpperCase().indexOf(filter) > -1;
        }
    </script>
</div>