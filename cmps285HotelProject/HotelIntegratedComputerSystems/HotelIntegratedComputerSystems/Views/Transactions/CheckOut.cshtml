@model HotelIntegratedComputerSystems.Models.Employees.TransactionsViewModel
@Scripts.Render("~/Scripts/SuggestionTable.js")
@Scripts.Render("~/Scripts/OneFilterPerColumn.js")

@{
    ViewBag.Title = "Check Out";
}

<h2></h2>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Check Out</h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.booking.CustomerName, "Customer Name:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.booking.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.booking.CustomerId, "Customer ID:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                @Html.EditorFor(model => model.booking.CustomerId, new { htmlAttributes = new { @class = "form-control", Id = "CustomerId", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.booking.RoomNumber, "RoomNumber", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                @Html.EditorFor(model => model.booking.RoomNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.RoomNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.booking.BuildingName, "BuildingName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                @Html.EditorFor(model => model.booking.BuildingName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.BuildingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.booking.FloorNumber, "FloorNumber", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" onkeyup="filterFunctionColumn()" data-action="filter" placeholder="">
                @Html.EditorFor(model => model.booking.FloorNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.FloorNumber, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.booking.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.booking.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.booking.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.booking.EndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.booking.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.booking.VolumeAdults, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.booking.VolumeAdults, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.booking.VolumeAdults, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.booking.VolumeChildren, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.booking.VolumeChildren, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.booking.VolumeChildren, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Check Out" class="btn btn-default" />
                </div>
                @Html.ActionLink("Edit Booking", "Edit", "Bookings", new { id = Model.booking.Id }, null)
            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Expenses</h3>
                </div>
                <table class="table table-hover table-bordered" id="dev-table">
                    <thead>
                        <tr>
                            <th>
                                Expense ID
                            </th>
                            <th>
                                Expense Type
                            </th>
                            <th>
                                Expense Amount
                            </th>
                            <th>
                                Expense Amount
                            </th>
                            <th>
                                End Date
                            </th>
                            <th>
                                @Html.ActionLink("Add Expense", "Create", "Expenses", null, null)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Expense)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpenseTypeType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpenseTypeDescription)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpenseTypeAmmount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExpenseTypeId)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>


            </div>
    }

    <div>
        @Html.ActionLink("Back to Transactions", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
